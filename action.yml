name: 'Terraform Apply'
description: "terraform apply for GCP"
inputs:
  gcp_key:
    description: GCP key of a service account that has at least read permissions to the resources managed by the terraform files
    required: true
  terraform_project_id:
    description: GCP project id of the folder's terraform state project
    required: true
  domain_project_id:
    description: GCP project id of the stack's domain
    required: true
  secrets_provisioning_private_key:
    description: Private key for a GitHub App that can provision repo-environments and secrets
    required: true
  additional_apply_args:
    description: Additional arguments to add to the `terraform apply` step. Use this to specify tfvar files, for example
    required: false
    default: ""
  use_plan_file:
    description: Whether to use the plan file from the `terraform plan` step. May not be compatible with additional_apply_args
    required: false
    default: "false"
  tf_working_dir:
    description: Path to directory where terraform commands should be run
    required: false
    default: "./"
runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Change directory
      run: cd ${{ inputs.tf_working_dir }}
    - name: Login to GCP
      uses: google-github-actions/setup-gcloud@master
      with:
        version: '344.0.0'
        service_account_key: ${{ inputs.gcp_key }}
        export_default_credentials: true
    - name: Set up Terraform cli
      uses: hashicorp/setup-terraform@v1
    - name: Generate backend config
      shell: bash
      run: |
        echo 'bucket = "${{ inputs.terraform_project_id }}-state"' > backend.hcl
        echo 'prefix = "${{ github.event.repository.name }}"' >> backend.hcl
    - name: TF init
      shell: bash
      run: terraform init -input=false -backend-config=./backend.hcl
    - name: TF apply
      shell: bash
      run: |
        if [[ ${{ inputs.use_plan_file }} == "true" ]]; then
          terraform apply -input=false ${{ inputs.additional_apply_args }} planfile
        else
          terraform apply -input=false -auto-approve ${{ inputs.additional_apply_args }}
        fi
      env:
        TF_VAR_secrets_provisioning_private_key: ${{ inputs.secrets_provisioning_private_key }}
        TF_VAR_google_project: ${{ inputs.domain_project_id }}
