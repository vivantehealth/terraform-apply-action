name: 'Terraform Apply'
description: "terraform apply for GCP"
inputs:
  base64_workload_identity_provider:
    description: GCP Workload Identity Pool Provider ID (e.g. projects/<project-number>/locations/global/workloadIdentityPools/<pool>/providers/<id>)
    required: true
  base64_gcp_service_account:
    description: GCP service Acccount to authenticate with using workload identity
    required: true
  base64_terraform_project_id:
    description: Base64 encoded GCP project id of the folder's terraform state project
    required: true
  base64_domain_project_id:
    description: Base64 encoded GCP project id of the stack's domain. Does not need to be set if planfile is used
    required: false
  base64_docker_registry:
    description: Base64 encoded docker registry, with optional docker repo name
    required: true    
  plan_file:
    description: Path to terraform plan file from the `terraform plan` step.
    required: false
    default: ""
  tfvars_file:
    description: Terraform variables file path, if any. Not compatible with plan_file
    required: false
    default: ""
  tf_working_dir:
    description: Path to directory where terraform commands should be run
    required: false
    default: "./"
runs:
  using: "composite"
  steps:
    - name: Set up gcloud
      uses: vivantehealth/gcloud-workload-identity-action@v2
      with:
        base64_workload_identity_provider: ${{ inputs.base64_workload_identity_provider }}
        base64_gcp_service_account: ${{ inputs.base64_gcp_service_account }}
    - name: Set up Terraform cli
      uses: hashicorp/setup-terraform@v3
    - name: Generate backend config
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash
      run: |
        echo "bucket = \"$(echo -n ${{ inputs.base64_terraform_project_id }} | base64 -d)-state\"" > backend.hcl
        echo "prefix = \"${{ github.event.repository.name }}\"" >> backend.hcl
        cat backend.hcl
    - name: TF init
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash
      run: terraform init -input=false -backend-config=./backend.hcl
    - name: TF apply
      working-directory: ${{ inputs.tf_working_dir }}
      shell: bash
      run: |
        export TF_VAR_stack_name=$(echo -n ${{ github.event.repository.name }})
        export TF_VAR_domain_project_id=$(echo -n ${{ inputs.base64_domain_project_id }} | base64 -d)
        export TF_VAR_docker_registry=$(echo -n "${{ inputs.base64_docker_registry }}" | base64 -d)
        export TF_VAR_terraform_project_id=$(echo -n ${{ inputs.base64_terraform_project_id }} | base64 -d)
        terraform apply -input=false ${{ inputs.additional_apply_args }} ${{ inputs.tfvars_file }} ${{ inputs.plan_file }}
